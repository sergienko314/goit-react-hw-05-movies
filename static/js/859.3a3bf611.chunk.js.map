{"version":3,"file":"static/js/859.3a3bf611.chunk.js","mappings":"uKAwBA,IArBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAEbC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOF,EAAOG,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC7C,OACI,SAAC,KAAD,CAAMC,MAAOP,EAAUQ,GAAE,kBAAaF,GAAtC,UACF,4BACE,gBACEG,IAAG,yCAAoCN,GACvCO,IAAKN,GAASC,EAERM,MAAM,SADDL,IAGT,wBAAKF,GAASC,MAPVC,IAWb,GACF,C,qJCeD,EAjCa,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAE4BC,EAAAA,EAAAA,UAF5B,OAESC,EAFT,OAGGH,EAAUG,GAHb,gDAKGC,MAAM,KAAM,KAAMC,UALrB,wDAAD,EAQD,GAAE,KAGD,iCACE,8CACA,0BACE,gBACEC,MAAO,CACLC,QAAS,OACTC,IAAK,OACLC,SAAU,OACVC,QAAS,QALb,UAQE,SAACC,EAAA,EAAD,CAAW1B,OAAQc,UAK5B,C,2ECjCKa,EAAU,mCACVC,EAAM,gDACNC,EAAqB,4CACrBC,EAAmB,qC,aAGzB,O,oBAAA,6FACEC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaH,IANxC,uBAMYM,EANZ,EAMYA,KANZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA6B7B,GAA7B,gFACEyB,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVG,MAAM,GAAD,OAAK9B,IAJd,kBAO2ByB,IAAAA,IAAA,UAAaF,IAPxC,uBAOYK,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA2B5B,GAA3B,gFACEwB,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,SAMII,QAAQC,IAAIR,GANhB,SAO2BC,IAAAA,IAAA,UAAaD,EAAb,YAAiCvB,IAP5D,uBAOY2B,EAPZ,EAOYA,KAPZ,kBASWA,GATX,mH,aAcA,O,oBAAA,WAAgC3B,GAAhC,gFACEwB,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiCvB,EAAjC,aAN3B,uBAMY2B,EANZ,EAMYA,KANZ,kBAOWA,EAAKK,MAPhB,gHAYeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCjC,GAAlC,gFACEwB,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVQ,KAAM,GAJV,kBAO2BV,IAAAA,IAAA,UAAaD,EAAb,YAAiCvB,EAAjC,aAP3B,uBAOY2B,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gHAYA,IAAMlB,EAAS,CACbyB,Q,WAjEaC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAkEbC,UArDF,SAa2B,GAAZC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAyCbC,WA3BF,SAYkC,GAAnBN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAgBbO,aA1CF,SAcgC,GAAjBC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA6BbC,gBArEF,SAa6B,GAAdC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GA2Df,K","sources":["components/TrendList.jsx","pages/Home/Home.jsx","utils/ApiFilmes.jsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\n\n\nconst TrendList = ({ filmes }) => {\n\n  const location = useLocation()\n\n  return filmes.map(({ poster_path, title, name, id }) => {\n    return (\n        <Link state={location} to={`/movies/${id}`}>\n      <div key={id}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title || name}\n                key={id}\n                width='200px'>\n            </img>\n            <h2>{title || name}</h2>\n              </div>\n           </Link >\n    );\n  });\n};\n\nexport default TrendList;\n","import TrendList from 'components/TrendList';\nimport { useEffect, useState } from 'react';\nimport apiGet from '../../utils/ApiFilmes';\n\nconst Home = () => {\n  const [cinema, setCinema] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const arrayFilms = await apiGet.popular();\n        setCinema(arrayFilms);\n      } catch (error) {\n        alert(error(error.message));\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <h1>Tranding Filmes </h1>\n      <div>\n        <div\n          style={{\n            display: 'flex',\n            gap: '30px',\n            fontSize: '23px',\n            padding: '50px',\n          }}\n        >\n          <TrendList filmes={cinema} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '1775dc36af6d9d988a7c29bf2a17d1bc';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get popular cinema\nasync function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    // (data);\n    return data.results;\n  } catch (error) {}\n}\n\n// поиск по name фильма на апи themoviedb\nasync function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get by id cinema\nasync function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    console.log(URL_SEARCH_BY_ID);\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// search actor by id\nasync function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// search reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getDataPopularCinema,\n  movieById: getDataById,\n  getReviews: getDataReviewsById,\n  getCharacter: getDataActorById,\n  getCinemaByName: getDataByName,\n};\n\nexport default apiGet;\n"],"names":["filmes","location","useLocation","map","poster_path","title","name","id","state","to","src","alt","width","useState","cinema","setCinema","useEffect","apiGet","arrayFilms","alert","message","style","display","gap","fontSize","padding","TrendList","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","query","console","log","cast","getDataReviewsById","page","popular","getDataPopularCinema","movieById","getDataById","getReviews","getCharacter","getDataActorById","getCinemaByName","getDataByName"],"sourceRoot":""}