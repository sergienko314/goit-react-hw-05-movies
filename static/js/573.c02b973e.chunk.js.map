{"version":3,"file":"static/js/573.c02b973e.chunk.js","mappings":"8NAwCA,UApCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAE,mCAAG,6GAEuBC,EAAAA,EAAAA,WAAkBP,GAFzC,OAEGQ,EAFH,OAGHJ,EAAeI,GAHZ,gDAMHC,MAAM,EAAD,IANF,yDAAH,qDASRH,GACH,GACK,CAACN,KAGH,8BACKG,EAAYO,OAAS,EACtBP,EAAYQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3B,OACI,yBACI,2BACJ,uBAAID,KACJ,uBAAIC,QAHKF,EAMhB,KACQ,wCAIpB,C,2ECpCKG,EAAU,mCACVC,EAAM,gDACNC,EAAqB,4CACrBC,EAAmB,qC,aAGzB,O,oBAAA,6FACEC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaH,IANxC,uBAMYM,EANZ,EAMYA,KANZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA6BC,GAA7B,gFACEL,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVI,MAAM,GAAD,OAAKD,IAJd,kBAO2BL,IAAAA,IAAA,UAAaF,IAPxC,uBAOYK,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA2BX,GAA3B,gFACEO,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,SAMIK,QAAQC,IAAIT,GANhB,SAO2BC,IAAAA,IAAA,UAAaD,EAAb,YAAiCN,IAP5D,uBAOYU,EAPZ,EAOYA,KAPZ,kBASWA,GATX,mH,aAcA,O,oBAAA,WAAgCV,GAAhC,gFACEO,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiCN,EAAjC,aAN3B,uBAMYU,EANZ,EAMYA,KANZ,kBAOWA,EAAKM,MAPhB,gHAYeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCjB,GAAlC,gFACEO,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVS,KAAM,GAJV,kBAO2BX,IAAAA,IAAA,UAAaD,EAAb,YAAiCN,EAAjC,aAP3B,uBAOYU,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gHAYA,IAAMhB,EAAS,CACbwB,Q,WAjEaC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAkEbC,UArDF,SAa2B,GAAZC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAyCbC,WA3BF,SAYkC,GAAnBN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAgBbO,aA1CF,SAcgC,GAAjBC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA6BbC,gBArEF,SAa6B,GAAdC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GA2Df,K","sources":["components/MoviesDatails/Reviews/Reviews.jsx","utils/ApiFilmes.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport apiGet from '../../../utils/ApiFilmes'\nconst Reviews = () => {\n    const { movieId } = useParams()\n    const [reviuesInfo, setReviuesInfo] = useState([])\n\n    useEffect(() => {\n        const fn = async () => {\n            try {\n                const reviewsList = await apiGet.getReviews(movieId);\n                setReviuesInfo(reviewsList)\n                \n            } catch (error) {\n                alert(error)\n            }\n        }\n        fn()\n    }\n        , [movieId])\n    \n    return (\n        <>\n            {reviuesInfo.length > 0 ? (\n            reviuesInfo.map(({ id, author, content }) => {\n                return (\n                    <ul key={id} >\n                        <li>\n                    <p>{author}</p>\n                    <p>{content}</p>\n                        </li>\n                    </ul>)\n            }\n                )) : <h2>No Reviues</h2>}\n        </>\n        \n    );\n}\n \nexport default Reviews;\n\n\n// ","import axios from 'axios';\n\nconst API_KEY = '1775dc36af6d9d988a7c29bf2a17d1bc';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get popular cinema\nasync function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    // (data);\n    return data.results;\n  } catch (error) {}\n}\n\n// поиск по name фильма на апи themoviedb\nasync function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get by id cinema\nasync function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    console.log(URL_SEARCH_BY_ID);\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// search actor by id\nasync function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// search reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getDataPopularCinema,\n  movieById: getDataById,\n  getReviews: getDataReviewsById,\n  getCharacter: getDataActorById,\n  getCinemaByName: getDataByName,\n};\n\nexport default apiGet;\n"],"names":["movieId","useParams","useState","reviuesInfo","setReviuesInfo","useEffect","fn","apiGet","reviewsList","alert","length","map","id","author","content","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","name","query","console","log","cast","getDataReviewsById","page","popular","getDataPopularCinema","movieById","getDataById","getReviews","getCharacter","getDataActorById","getCinemaByName","getDataByName"],"sourceRoot":""}