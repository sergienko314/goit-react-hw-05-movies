{"version":3,"file":"static/js/71.b858f8c2.chunk.js","mappings":"6NA+CA,UA1Ca,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAE,mCAAG,6GAEuBC,EAAAA,EAAAA,aAAoBP,GAF3C,OAEGQ,EAFH,OAGHJ,EAAYI,GAHT,gDAMHC,MAAM,EAAD,IANF,yDAAH,qDASRH,GACH,GACK,CAACN,KAGH,gCACKG,GAAaA,EAASO,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAEpE,OACE,4BACE,gBAAKC,MAAO,CAACC,OAAQ,QAASC,IAAG,yCAAoCN,GAAgBO,IAAI,yBACzF,0BACE,4BACE,wBAAKN,KACL,wBAAKC,GAAa,0BALdC,EAUb,KACD,sCAIX,C,2EC1CKK,EAAU,mCACVC,EAAM,gDACNC,EAAqB,4CACrBC,EAAmB,qC,aAGzB,O,oBAAA,6FACEC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaH,IANxC,uBAMYM,EANZ,EAMYA,KANZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA6BC,GAA7B,gFACEL,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVI,MAAM,GAAD,OAAKD,IAJd,kBAO2BL,IAAAA,IAAA,UAAaF,IAPxC,uBAOYK,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA2Bb,GAA3B,gFACES,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,SAMIK,QAAQC,IAAIT,GANhB,SAO2BC,IAAAA,IAAA,UAAaD,EAAb,YAAiCR,IAP5D,uBAOYY,EAPZ,EAOYA,KAPZ,kBASWA,GATX,mH,aAcA,O,oBAAA,WAAgCZ,GAAhC,gFACES,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiCR,EAAjC,aAN3B,uBAMYY,EANZ,EAMYA,KANZ,kBAOWA,EAAKM,MAPhB,gHAYeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCnB,GAAlC,gFACES,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVS,KAAM,GAJV,kBAO2BX,IAAAA,IAAA,UAAaD,EAAb,YAAiCR,EAAjC,aAP3B,uBAOYY,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gHAYA,IAAMpB,EAAS,CACb4B,Q,WAjEaC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAkEbC,UArDF,SAa2B,GAAZC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAyCbC,WA3BF,SAYkC,GAAnBN,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAgBbO,aA1CF,SAcgC,GAAjBC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA6BbC,gBArEF,SAa6B,GAAdC,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GA2Df,K","sources":["components/MoviesDatails/Cast/Cast.jsx","utils/ApiFilmes.jsx"],"sourcesContent":["\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport apiGet from '../../../utils/ApiFilmes'\nconst Cast = () => {\n    const { movieId } = useParams()\n    const [castInfo, setCastInfo] = useState([])\n  \n    \n    useEffect(() => {\n        const fn = async () => {\n            try {\n                const reviewsList = await apiGet.getCharacter(movieId);\n                setCastInfo(reviewsList)\n                \n            } catch (error) {\n                alert(error)\n            }\n        }\n        fn()\n    }\n        , [movieId])\n    \n    return (\n        <>\n            {castInfo && (castInfo.map(({ profile_path, original_name, character, id }) => {\n             \n              return (\n                <div key={id}>\n                  <img style={{height: '20vw'}} src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"poster of character\" />\n                  <div>\n                    <div>\n                      <h3>{original_name}</h3>\n                      <h3>{character || 'хз))'}</h3>\n                    </div>\n                  </div>\n                </div>\n              );\n            }))}\n            <h2>No Cast</h2>\n        </>\n        \n    );\n}\n \n \nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '1775dc36af6d9d988a7c29bf2a17d1bc';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get popular cinema\nasync function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    // (data);\n    return data.results;\n  } catch (error) {}\n}\n\n// поиск по name фильма на апи themoviedb\nasync function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get by id cinema\nasync function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    console.log(URL_SEARCH_BY_ID);\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// search actor by id\nasync function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// search reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getDataPopularCinema,\n  movieById: getDataById,\n  getReviews: getDataReviewsById,\n  getCharacter: getDataActorById,\n  getCinemaByName: getDataByName,\n};\n\nexport default apiGet;\n"],"names":["movieId","useParams","useState","castInfo","setCastInfo","useEffect","fn","apiGet","reviewsList","alert","map","profile_path","original_name","character","id","style","height","src","alt","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","name","query","console","log","cast","getDataReviewsById","page","popular","getDataPopularCinema","movieById","getDataById","getReviews","getCharacter","getDataActorById","getCinemaByName","getDataByName"],"sourceRoot":""}