{"version":3,"file":"static/js/954.6534e947.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesDatails/MuviesCard/MoviesCard.module.css?20f0","components/MoviesDatails/MuviesCard/MoviesCard.jsx","utils/ApiFilmes.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"MoviesCard_poster__PWNl0\",\"muvieCardBlock\":\"MoviesCard_muvieCardBlock__OXMB+\",\"goBackButton\":\"MoviesCard_goBackButton__woXsP\",\"posterImg\":\"MoviesCard_posterImg__T3nyu\",\"styleLinkButton\":\"MoviesCard_styleLinkButton__-Q3kv\",\"filmList\":\"MoviesCard_filmList__h425u\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport apiGet from '../../../utils/ApiFilmes';\nimport styles from './MoviesCard.module.css'\n\nconst MoviesCard = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState({});\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fn = async () => {\n      try {\n        const array = await apiGet.movieById(movieId);\n        setData(array);\n      } catch (error) {\n        alert(error.message);\n      }\n    };\n    fn();\n  }, [movieId]);\n\n  const {\n    backdrop_path,\n    title,\n    original_title,\n    vote_average,\n    poster_path,\n    release_date,\n    overview,\n    genres,\n  } = data;\n\n  return (\n    Object.keys(data).length > 0 && (\n      <div>\n        <div\n          className={styles.poster}\n          style={{\n          background: `url(https://image.tmdb.org/t/p/w500${backdrop_path})`\n        }}\n      >\n        <div\n          key={movieId}\n          className={styles.muvieCardBlock}\n        >\n            <button\n              className={styles.goBackButton}\n            \n            onClick={() => navigate(location.state)}\n          >\n            ↩️ <br></br> go back\n          </button>\n            <img\n              className={styles.posterImg}\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt=\"\"\n          />\n          <div style={{ padding: '40px' }}>\n            <h1>\n              {title || original_title}\n              <span> ({release_date})</span>\n            </h1>\n            <p>\n              User score <span> {vote_average}</span>\n            </p>\n            <h3>Overview</h3>\n            <p>{overview || 'нажаль опис поки в розробці'}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(gen => gen.name + ' ')}</p>\n            <div className={styles.styleLinkButton} >\n              <Link state={location.state} to={`/movies/${movieId}/reviews`}>\n                Reviews\n              </Link>\n              <Link state={location.state} to={`/movies/${movieId}/cast`}>\n                Cast\n              </Link>\n            </div>\n          </div>\n        </div>\n          <div className={styles.filmList}> \n        </div>\n      </div>\n      <Outlet/>\n      </div >\n    )\n  );\n};\n\nexport default MoviesCard;\n","import axios from 'axios';\n\nconst API_KEY = '1775dc36af6d9d988a7c29bf2a17d1bc';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get popular cinema\nasync function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    // (data);\n    return data.results;\n  } catch (error) {}\n}\n\n// поиск по name фильма на апи themoviedb\nasync function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get by id cinema\nasync function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    console.log(URL_SEARCH_BY_ID);\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// search actor by id\nasync function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// search reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getDataPopularCinema,\n  movieById: getDataById,\n  getReviews: getDataReviewsById,\n  getCharacter: getDataActorById,\n  getCinemaByName: getDataByName,\n};\n\nexport default apiGet;\n"],"names":["movieId","useParams","useState","data","setData","location","useLocation","navigate","useNavigate","useEffect","fn","apiGet","array","alert","message","backdrop_path","title","original_title","vote_average","poster_path","release_date","overview","genres","Object","keys","length","className","styles","style","background","onClick","state","src","alt","padding","map","gen","name","to","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","results","query","id","console","log","cast","getDataReviewsById","page","popular","getDataPopularCinema","movieById","getDataById","getReviews","getCharacter","getDataActorById","getCinemaByName","getDataByName"],"sourceRoot":""}